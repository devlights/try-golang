package slices

import "github.com/devlights/gomy/output"

// Copy は、スライスの コピー についてのサンプルです.
func Copy() error {
	// ----------------------------------------------------------------
	// スライスのコピーについて
	//
	// Goにはスライスのコピー用に 組み込み関数 copy() が用意されているが
	// 単純に特定のスライスの中身を全部コピーする場合は
	// 空のスライスを用意して、Appendで一気に追加しても良い.
	//
	// copy() でスライスをコピーする場合によくやりがちな間違いがあって
	// コピー先のスライスを
	//    make([]int, 0, len(s))
	// のように長さを0にして作ってしまうこと。
	// copy() は、コピー先のスライスの長さ分コピーする動きをするので
	// この場合は、コピー対象が何件あっても１件もコピーされない。
	//
	// append() でコピーする場合は、要素の追加処理となるので気にしなくて良い
	// ----------------------------------------------------------------
	// 組み込み関数 copy() 利用
	// ここで、s2 の長さを0にして宣言すると一切コピーされない
	s1 := []int{1, 2, 3}
	s2 := make([]int, len(s1))
	copy(s2, s1)

	// 空のスライスに append()
	// こちらは要素を追加していくので 0 で良い。
	s3 := make([]int, 0, len(s1))
	s3 = append(s3, s1...)

	output.Stdoutl("(1)", s1, s2, s3)

	return nil

	/*
	   $ task
	   task: [build] go build .
	   task: [run] ./try-golang -onetime

	   ENTER EXAMPLE NAME: slice_copy

	   [Name] "slice_copy"
	   (1)                  [1 2 3] [1 2 3] [1 2 3]


	   [Elapsed] 22.92µs
	*/

}
